branches:
  only:
    - master

sudo: false

os:
  - linux

language: generic

env:
  - PY=2.7 UPLOAD_DOCS=0
  - PY=3.6 UPLOAD_DOCS=1

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin

before_install:
- sudo apt-get install gfortran
- wget "https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh" -O miniconda.sh
- chmod +x miniconda.sh
- ./miniconda.sh -b  -p /home/travis/miniconda;
- PATHPREFIX="/home/travis/miniconda/bin";
- export PATH=$PATHPREFIX:$PATH
- export CWD=$(pwd)
- conda create --yes -n test_env python=$PY swig sphinx
- source activate test_env
- pip install --upgrade pip
- pip install numpy==1.14.1
- pip install scipy==1.0.0
- pip install matplotlib
- pip install nose
- pip install mock
- pip install pip
- pip install networkx
- pip install testflo
- pip install pyyaml

install:
- git clone https://github.com/mdolab/pyoptsparse.git;
- cd pyoptsparse;
- python setup.py build install;
- cd ..;

# install MBI
- git clone https://github.com/OpenMDAO/MBI.git ./MBI.git;
- cd MBI.git;
- python setup.py build install;
- cd ..;

- pip install coveralls

# install OpenMDAO in developer mode so we have access to its sphinx extensions
- git clone https://github.com/OpenMDAO/OpenMDAO.git ./OpenMDAO.git;
- cd OpenMDAO.git;
- pip install -e .
- cd ..;

- pip install -e .

script:
- cd docs
- make clean
- cd ..

after_success:
- echo success

deploy:
  provider: script
  skip_cleanup: true
  script:
  - echo 'foo'
  on:
    branch: master
