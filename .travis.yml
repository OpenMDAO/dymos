branches:
  only:
    - master

sudo: false

os:
  - linux

env:
  - PY=2.7
  - PY=3.6

language: generic

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin

before_install:
- if [ "$PY" = "2.7" ];  then wget "https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh" -O miniconda.sh; fi
- if [ "$PY" = "3.6" ];  then wget "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" -O miniconda.sh; fi
- chmod +x miniconda.sh;
- ./miniconda.sh -b  -p /home/travis/miniconda;
- export PATH=/home/travis/miniconda/bin:$PATH;

install:
- conda install --yes python=$PY numpy scipy nose sphinx mock swig pip;
- pip install --upgrade pip
- sudo apt-get install gfortran
#- export CWD=$(pwd)
#- cd ${CWD}
#- cd ..
#- export ROOT_DIR=$(pwd)
- pip install numpy==1.14.1
- pip install scipy==1.0.0
- pip install mpi4py
- pip install matplotlib
- pip install nose
- pip install networkx
- pip install testflo
- pip install pyyaml
- pip install coveralls
- pip install --user travis-sphinx;

# install pyoptsparse
- git clone https://github.com/OpenMDAO/pyoptsparse.git;
- cd pyoptsparse;
- python setup.py install;
- cd ..;

# install MBI
- git clone https://github.com/OpenMDAO/MBI.git;
- cd MBI;
- python setup.py build install;
- cd ..;

# install OpenMDAO in developer mode so we have access to its sphinx extensions
- git clone https://github.com/OpenMDAO/OpenMDAO.git;
- cd OpenMDAO;
- pip install -e .;
- cd ..;

- pip install -e .;

# The script for the default test stage
script:
- testflo -n 1 dymos --pre_announce --coverage --coverpkg dymos;
- travis-sphinx build --source=dymos/docs;

# The after_success job for the default test stage
after_success:
- travis-sphinx deploy;
- coveralls;
